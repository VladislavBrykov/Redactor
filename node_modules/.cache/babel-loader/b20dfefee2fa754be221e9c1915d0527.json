{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vladislav/Desktop/CalendarIvent-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vladislav/Desktop/CalendarIvent-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vladislav/Desktop/CalendarIvent-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vladislav/Desktop/CalendarIvent-master/src/pages/PublicCalendars.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Pagination from 'rc-pagination';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './posts.css';\nimport 'rc-pagination/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PublicPostsPage(params) {\n  _s();\n\n  var _this = this;\n\n  // Страница постов\n  var styles = {\n    //Стили для страницы\n    position: 'absolute',\n    top: '70px',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  };\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      CurrentPage = _useState2[0],\n      changeCurrentPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataFromServer = _useState4[0],\n      setDataFromServer = _useState4[1]; //Используем хук состояния для данных с сервера\n\n\n  var loadData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //Функция с запросом на сервер\n              axios.defaults.baseURL = 'http://localhost:3000/api';\n              _context.next = 3;\n              return axios.get(\"/base_public_myevent\", {\n                headers: {\n                  Authorization: localStorage.jwtToken\n                }\n              });\n\n            case 3:\n              res = _context.sent;\n              console.log(res.data.rp);\n              setDataFromServer(res.data.rp.reverse());\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var delCalendar = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n      var body, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //Функция с запросом на сервер удалить календать из списка общих\n              body = {\n                \"Id_user\": item.id_user,\n                \"Name\": item.name_table,\n                \"Description\": item.description\n              };\n              _context2.next = 3;\n              return axios.patch('http://localhost:3000/api/delete_public_myevent', {\n                body: body,\n                headers: {\n                  Authorization: localStorage.jwtToken\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n              console.log(res.data.rp);\n              loadData(); //setDataFromServer(res.data.rp.reverse())\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function delCalendar(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //   const shareCalendar = async (name_table) => { //Функция с запросом на сервер удалить календать из списка общих\n  //     let body = {\"name_table\": name_table}\n  //     axios.defaults.baseURL = 'http://localhost:3000/api';\n  //     const res = await axios.post(\n  //       `/public_calendar`,\n  //       body,\n  //       {\n  //         headers: {\n  //           Authorization: localStorage.jwtToken\n  //         }\n  //       }\n  //     );\n  //   console.log(res.data.rp);\n  //   loadData();\n  //  // setDataFromServer(res.data.rp.reverse())\n  // }\n\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    children: [dataFromServer.map(function (item, index) {\n      return index < CurrentPage * 5 && index >= (CurrentPage - 1) * 5 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pressed\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"h2\",\n          children: item.name_table\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"h4\",\n          children: item.description\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"btnn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/public_event' + '/' + item.name_table,\n              children: \"\\u041F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 39\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"button\",\n            onClick: function onClick() {\n              return delCalendar(item);\n            },\n            children: \" \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, _this) : null;\n    }), dataFromServer.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"\",\n        onChange: function onChange(current) {\n          return changeCurrentPage(current);\n        },\n        defaultCurrent: 1,\n        total: Math.ceil(dataFromServer.length / 5) * 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041A\\u0430\\u043B\\u0435\\u043D\\u0434\\u0430\\u0440\\u0435\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PublicPostsPage, \"uiv8WZEO8Ud7FrWnPFLiarWf4JM=\");\n\n_c = PublicPostsPage;\nexport default PublicPostsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicPostsPage\");","map":{"version":3,"sources":["/Users/vladislav/Desktop/CalendarIvent-master/src/pages/PublicCalendars.jsx"],"names":["React","useState","useEffect","Pagination","axios","Link","PublicPostsPage","params","styles","position","top","left","transform","CurrentPage","changeCurrentPage","dataFromServer","setDataFromServer","loadData","defaults","baseURL","get","headers","Authorization","localStorage","jwtToken","res","console","log","data","rp","reverse","delCalendar","item","body","id_user","name_table","description","patch","map","index","length","current","Math","ceil"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Pagination from 'rc-pagination';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './posts.css'\nimport 'rc-pagination/assets/index.css';\n\nfunction PublicPostsPage(params) {// Страница постов\n  const styles = {//Стили для страницы\n    position: 'absolute',\n    top: '70px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n  }\n\n  const [CurrentPage, changeCurrentPage] = useState(1)\n  const [dataFromServer, setDataFromServer] = useState([]); //Используем хук состояния для данных с сервера\n\n  const loadData = async () => { //Функция с запросом на сервер\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    const res = await axios.get(\n        `/base_public_myevent`,\n        {\n          headers: {\n            Authorization: localStorage.jwtToken\n          }\n        }\n      );\n    console.log(res.data.rp);\n    setDataFromServer(res.data.rp.reverse())\n  }\n\n      const delCalendar = async (item) => { //Функция с запросом на сервер удалить календать из списка общих\n      let body = { \"Id_user\": item.id_user, \"Name\": item.name_table, \"Description\": item.description };\n      \n      const res = await axios.patch('http://localhost:3000/api/delete_public_myevent', {\n        body,\n        headers: {\n          Authorization: localStorage.jwtToken\n        }\n      });\n    console.log(res.data.rp);\n    loadData();\n    //setDataFromServer(res.data.rp.reverse())\n  }\n\n//   const shareCalendar = async (name_table) => { //Функция с запросом на сервер удалить календать из списка общих\n//     let body = {\"name_table\": name_table}\n//     axios.defaults.baseURL = 'http://localhost:3000/api';\n//     const res = await axios.post(\n//       `/public_calendar`,\n//       body,\n//       {\n//         headers: {\n//           Authorization: localStorage.jwtToken\n//         }\n//       }\n//     );\n//   console.log(res.data.rp);\n//   loadData();\n//  // setDataFromServer(res.data.rp.reverse())\n// }\n\n  useEffect(() => {\n    loadData()\n  }, [])\n\n  return (\n    <div style={styles}>\n\n      {\n        dataFromServer.map((item, index) => index < CurrentPage * 5 && index >= (CurrentPage - 1) * 5\n          ? <div id=\"pressed\">\n            <h2 id=\"h2\" key={index}>{item.name_table}</h2>\n            <h3 id=\"h4\" key={index}>{item.description}</h3>\n            <div class=\"btnn-group\">\n              <button class=\"button\" ><Link to={'/public_event' + '/' + item.name_table}>Посмотреть</Link></button>\n              <button  class=\"button\"  onClick={() => delCalendar(item)}> Удалить </button>\n              \n            </div>\n          </div>\n          : null)\n      }\n\n      {\n        dataFromServer.length\n          ? <div className=\"p-2\">\n            <Pagination className=\"\" onChange={(current) => changeCurrentPage(current)} defaultCurrent={1} total={Math.ceil(dataFromServer.length / 5) * 10} />\n          </div>\n          : <h2>Календарей пока нет</h2>\n      }\n\n    </div>\n  );\n}\n\nexport default PublicPostsPage;\n\n"]},"metadata":{},"sourceType":"module"}
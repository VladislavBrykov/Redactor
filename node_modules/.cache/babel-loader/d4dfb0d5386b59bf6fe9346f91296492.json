{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/vladislav/Desktop/Redactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/vladislav/Desktop/Redactor/src/components/app-header/app-header.jsx\";\nimport React from 'react';\nimport './app-header.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AppHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppHeader, _React$Component);\n\n  var _super = _createSuper(AppHeader);\n\n  function AppHeader() {\n    _classCallCheck(this, AppHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppHeader, [{\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //Функция с запросом на сервер\n                axios.defaults.baseURL = 'http://localhost:3000/api';\n                body = {};\n                _context.next = 4;\n                return axios.post(\"/auth/logout\", body, {\n                  headers: {\n                    Authorization: localStorage.jwtToken\n                  }\n                }).then(function () {\n                  return _this.props.changeLoggedIn('off');\n                });\n\n              case 4:\n                delete localStorage.jwtToken;\n                delete localStorage.role;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-wrapper\",\n        children: this.props.loggedIn === \"admin\" || this.props.loggedIn === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn\",\n            onClick: function onClick() {\n              return _this2.loadData();\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/registration\",\n              children: \"Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            className: \"logo\",\n            children: \"\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u043E\\u0433\\u0440\\u0430\\u043D\\u0438\\u0447\\u0435\\u043D\\u044B: \\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return AppHeader;\n}(React.Component);\n\nexport default AppHeader; // const AppHeader = () => {\n//   let loginButton;\n//   let registrationButton;\n//   let logo;\n// const loadData = async () => { //Функция с запросом на сервер\n//   axios.defaults.baseURL = 'http://localhost:3000/api';  \n//   const body = {};\n//   const res = await axios.post(\n//     `/auth/logout`,\n//     body,\n//     {\n//     headers: {\n//       Authorization: localStorage.jwtToken\n//     }\n//   }\n//   );\n//   delete localStorage.jwtToken;\n//   //window.location.reload(); \n//    console.log(res.data);\n//    console.log(localStorage.jwtToken);\n// }\n//     if (localStorage.jwtToken) {\n//       //loginButton = <button id=\"btn\" className=\"active\" onClick={() => loadData()} >Выйти</button>\n//       // loginButton = <button id=\"btn\">onClick={() => loadData()}<Link to=\"/\">Logout</Link></button>;\n//       loginButton = <button id=\"btn\" onClick={() => loadData()}><Link to=\"/login\">Logout</Link></button>;\n//      } else {\n//        loginButton = <button id=\"btn\"><Link to=\"/login\">Login</Link></button>;\n//        registrationButton = <button id=\"btn\"><Link to=\"/registration\">Registration</Link></button>\n//        logo = <a href=\"/login\" className=\"logo\">Возможности ограничены: Авторизируйтесь</a>\n//      }\n//     return (\n//       <div className=\"header\">\n//         {logo}\n//         <div className=\"header-right\">\n//           <a className=\"active\" href=\"#home\">Home</a>\n//           {loginButton}\n//           {registrationButton}\n//         </div>\n//       </div>\n//     )\n// }\n// export default AppHeader;\n// Короче тебе нужно переписать\n// Тебе сначало нужно реализовать правильно логин, и сделать отдельный стейт\n// Когда будет стейт для логина, тогда при логауте ты его будешь менять\n// Сейчас выходит что у тебя для логина в реакте нет состояния, только localStorage\n//ты сможешь это сделать? и цена\n// не уверен, что это будет быстро)\n// так как я с хуками работаю а тут тебе по хорошему если не используешь хуки то использовать редакс\n// тебе состояние логина нужно передавать полностью во все приложение, а не только в хедер\n// и это нужно делать на самом высоком уровне\n// потому что если ты продолжишь делать так, как сейчас, то тебе в каждый компонент надо будет как-то засовывать состояние логина\n// по этому на высшел уровне где то в App.js к примеру ты делаешь стейт и потом если не работаешь с редакс то просто его передаешь через пропсы в дочерние компоненты\n// короче нужно переделывать все\n// лучше сам начни все переделыват,а там вопросы будут - пиши\n//окей, пачалька =(\n// Страано просто ты начал с логаута, а не логина )))\n//спасибо, сори что голову поморил\n// та ниче) удачи в обучении)) если шо пиши","map":{"version":3,"sources":["/Users/vladislav/Desktop/Redactor/src/components/app-header/app-header.jsx"],"names":["React","Link","axios","AppHeader","defaults","baseURL","body","post","headers","Authorization","localStorage","jwtToken","then","props","changeLoggedIn","role","loggedIn","loadData","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;IAEMC,S;;;;;;;;;;;;;;+EAEJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmB;AAEjBD,gBAAAA,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AACMC,gBAAAA,IAHR,GAGe,EAHf;AAAA;AAAA,uBAIQJ,KAAK,CAACK,IAAN,iBAEJD,IAFI,EAGJ;AACEE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,aAAa,EAAEC,YAAY,CAACC;AADrB;AADX,iBAHI,EASHC,IATG,CASE;AAAA,yBAAM,KAAI,CAACC,KAAL,CAAWC,cAAX,CAA0B,KAA1B,CAAN;AAAA,iBATF,CAJR;;AAAA;AAeE,uBAAOJ,YAAY,CAACC,QAApB;AACA,uBAAOD,YAAY,CAACK,IAApB;;AAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAmBA,kBAAS;AAAA;;AAEP,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAEI,KAAKF,KAAL,CAAWG,QAAX,KAAwB,OAAxB,IAAmC,KAAKH,KAAL,CAAWG,QAAX,KAAwB,MAA3D,gBACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACA;AAAQ,YAAA,EAAE,EAAC,KAAX;AAAiB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,aAA1B;AAAA,mCAAiD,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAII;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACA;AAAQ,YAAA,EAAE,EAAC,KAAX;AAAA,mCAAiB,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAQ,YAAA,EAAE,EAAC,KAAX;AAAA,mCAAiB,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAG,YAAA,IAAI,EAAC,QAAR;AAAiB,YAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;;;;EAtCqBjB,KAAK,CAACkB,S;;AAyC9B,eAAef,SAAf,C,CAKA;AACA;AACA;AACA;AAEI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA","sourcesContent":["import React from 'react'\nimport './app-header.css';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass AppHeader extends React.Component {\n\n  async loadData() { //Функция с запросом на сервер\n\n    axios.defaults.baseURL = 'http://localhost:3000/api';\n    const body = {};\n    await axios.post(\n      `/auth/logout`,\n      body,\n      {\n        headers: {\n          Authorization: localStorage.jwtToken\n        }\n      }\n    )\n      .then(() => this.props.changeLoggedIn('off'))\n\n    delete localStorage.jwtToken;\n    delete localStorage.role;\n  }\n\n  render() {\n\n    return (\n      <div className=\"header-wrapper\">\n        {\n          this.props.loggedIn === \"admin\" || this.props.loggedIn === \"user\"\n            ? <div className=\"header\">\n              <button id=\"btn\" onClick={() => this.loadData()}><Link to=\"/login\">Logout</Link></button>;\n            </div>\n            : <div className=\"header\">\n              <button id=\"btn\"><Link to=\"/login\">Login</Link></button>\n              <button id=\"btn\"><Link to=\"/registration\">Registration</Link></button>\n              <a href=\"/login\" className=\"logo\">Возможности ограничены: Авторизируйтесь</a>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default AppHeader;\n\n\n\n\n// const AppHeader = () => {\n//   let loginButton;\n//   let registrationButton;\n//   let logo;\n\n    // const loadData = async () => { //Функция с запросом на сервер\n\n    //   axios.defaults.baseURL = 'http://localhost:3000/api';  \n    //   const body = {};\n    //   const res = await axios.post(\n    //     `/auth/logout`,\n    //     body,\n    //     {\n    //     headers: {\n    //       Authorization: localStorage.jwtToken\n    //     }\n    //   }\n    //   );\n    //   delete localStorage.jwtToken;\n    //   //window.location.reload(); \n    //    console.log(res.data);\n    //    console.log(localStorage.jwtToken);\n    // }\n\n//     if (localStorage.jwtToken) {\n//       //loginButton = <button id=\"btn\" className=\"active\" onClick={() => loadData()} >Выйти</button>\n//       // loginButton = <button id=\"btn\">onClick={() => loadData()}<Link to=\"/\">Logout</Link></button>;\n//       loginButton = <button id=\"btn\" onClick={() => loadData()}><Link to=\"/login\">Logout</Link></button>;\n\n//      } else {\n//        loginButton = <button id=\"btn\"><Link to=\"/login\">Login</Link></button>;\n//        registrationButton = <button id=\"btn\"><Link to=\"/registration\">Registration</Link></button>\n//        logo = <a href=\"/login\" className=\"logo\">Возможности ограничены: Авторизируйтесь</a>\n//      }\n\n//     return (\n//       <div className=\"header\">\n//         {logo}\n//         <div className=\"header-right\">\n//           <a className=\"active\" href=\"#home\">Home</a>\n//           {loginButton}\n//           {registrationButton}\n//         </div>\n//       </div>\n//     )\n// }\n\n// export default AppHeader;\n\n  // Короче тебе нужно переписать\n  // Тебе сначало нужно реализовать правильно логин, и сделать отдельный стейт\n  // Когда будет стейт для логина, тогда при логауте ты его будешь менять\n  // Сейчас выходит что у тебя для логина в реакте нет состояния, только localStorage\n  //ты сможешь это сделать? и цена\n  // не уверен, что это будет быстро)\n  // так как я с хуками работаю а тут тебе по хорошему если не используешь хуки то использовать редакс\n  // тебе состояние логина нужно передавать полностью во все приложение, а не только в хедер\n  // и это нужно делать на самом высоком уровне\n  // потому что если ты продолжишь делать так, как сейчас, то тебе в каждый компонент надо будет как-то засовывать состояние логина\n  // по этому на высшел уровне где то в App.js к примеру ты делаешь стейт и потом если не работаешь с редакс то просто его передаешь через пропсы в дочерние компоненты\n  // короче нужно переделывать все\n  // лучше сам начни все переделыват,а там вопросы будут - пиши\n  //окей, пачалька =(\n    // Страано просто ты начал с логаута, а не логина )))\n    //спасибо, сори что голову поморил\n    // та ниче) удачи в обучении)) если шо пиши\n"]},"metadata":{},"sourceType":"module"}